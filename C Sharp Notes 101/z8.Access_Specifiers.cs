/*namespace C_Sharp_Notes_101;


// C# provides you with access modifiers that allow you to specify which classes can access the data members of a particular class.

// In C#, there are four commonly used access modifiers.

// public
// private      (default data members) if nothing is used. (by default for varibales or methods)
// protected
// internal



//-------------------------------------------------------------------------------------------------------------------------------------------------//

//----------------APPLICABLE---------APPLICABLE-----------APPLICABLE TO----------APPLICABLE TO--------------APPLICABLE TO OUTSIDE-----------------
//----------------TO THE -------------TO THE CURRENT-------THE DERIVED------------OUTSIDE NAMESPACE/---------THE NAMESPACE BUT IN------------------ 
//----------------APPLICATION---------CLASS----------------CLASS------------------ASSEMBLY-------------------DERIVED CLASS-------------------------


//PUBLIC             YES                YES                 YES                        YES                          YES
//PRIVATE            NO                 YES                  NO                        NO                           NO
//PROTECTED          NO                 YES                  YES                        NO                          YES           
//INTERNAL           YES                YES                  YES                        NO                           NO


public class Access_Specifiers
{
    static void Main(string[] args)

    {
       
    }

    public void Abc()
    {
        
    }
}*/


// members of same class can access each other.(private is default in members)

// Only Public and internal access modifiers are used with the class.(internal is default in class)




//PUBLIC    : The public access modifier provides the most permissive access level.
//          : The members declared as public can be accessed anywhere in the class as well as from other classes.


//PRIVATE : The private access modifier provides the least permissive access level.
//        : Private members are accessible only within the class in which they are declared.


// PROTECTED : The protected access modifier allows the class members to be accessible within the class as well as within the derived class.


// INTERNAL : The internal access modifier allows the class members to be accessible only within the classes of the same namespace/assembly.
// An assembly is a file that automatically generated by the compiler upon successful compilation of a .NET application.
// The code declares a variable called NumOne as internal , which means it has only assembly-level access.